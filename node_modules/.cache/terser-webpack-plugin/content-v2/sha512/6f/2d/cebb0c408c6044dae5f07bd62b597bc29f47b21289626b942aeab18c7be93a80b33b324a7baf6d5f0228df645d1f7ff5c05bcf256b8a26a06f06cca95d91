{"code":"(this[\"webpackJsonpon-covid\"]=this[\"webpackJsonpon-covid\"]||[]).push([[0],{33:function(e,t,s){},66:function(e,t,s){},67:function(e,t,s){},68:function(e,t,s){\"use strict\";s.r(t);var a=s(0),n=s(1),c=s.n(n),i=s(25),C=s.n(i),l=(s(33),s(6)),h=s(7),r=s(3),o=s(9),d=s(8),p=s(26),L=s.n(p),j=s(11),b=s(27),g=s.n(b),f=(s(23),s(24),\"newInfectionsToday\"),x=\"testsCompleted\",O=\"deathsToday\",u=\"hospitalized\",m=function(e){Object(o.a)(s,e);var t=Object(d.a)(s);function s(e){var a;return Object(l.a)(this,s),(a=t.call(this,e)).state={noData:!1,newInfectionsChangeText:\"\",newInfectionsPercentChange:\"\",casesGraph:[],testsGraph:[],deathsGraph:[],hospGraph:[]},a.getHighest=a.getHighest.bind(Object(r.a)(a)),a.setGraphHeights=a.setGraphHeights.bind(Object(r.a)(a)),a.checkForData=a.checkForData.bind(Object(r.a)(a)),a.infectionsChange=a.infectionsChange.bind(Object(r.a)(a)),a}return Object(h.a)(s,[{key:\"componentDidMount\",value:function(){var e=this;setTimeout((function(){e.props&&e.props.pastWeekInfections.length>0&&(e.setGraphHeights(\"newInfectionsToday\"),e.setGraphHeights(\"testsCompleted\"),e.setGraphHeights(\"deathsToday\"),e.setGraphHeights(\"hospitalized\"),e.checkForData(),e.infectionsChange())}),2500)}},{key:\"getHighest\",value:function(e){var t=[].concat(this.props.pastWeekInfections);switch(e){case f:return t.sort((function(e,t){return e.newInfectionsToday>t.newInfectionsToday?1:-1})),t[t.length-1];case x:return t.sort((function(e,t){return e.testsCompleted>t.testsCompleted?1:-1})),t[t.length-1];case O:return t.sort((function(e,t){return e.deathsToday>t.deathsToday?1:-1})),t[t.length-1];case u:return t.sort((function(e,t){return e.hospitalized>t.hospitalized?1:-1})),t[t.length-1];default:return t.sort((function(e,t){return e.newInfectionsToday>t.newInfectionsToday?1:-1})),t[t.length-1]}}},{key:\"setGraphHeights\",value:function(e){var t=this.getHighest(e),s=[];switch(e){case f:for(var a=0;a<this.props.pastWeekInfections.length;a++){var n=this.props.pastWeekInfections[a].newInfectionsToday/t.newInfectionsToday*100;s.splice(a,0,n)}console.log(s),this.setState({casesGraph:s});break;case x:for(var c=0;c<this.props.pastWeekInfections.length;c++){var i=this.props.pastWeekInfections[c].testsCompleted/t.testsCompleted*100;s.splice(c,0,i)}this.setState({testsGraph:s});break;case O:for(var C=0;C<this.props.pastWeekInfections.length;C++){var l=this.props.pastWeekInfections[C].deathsToday/t.deathsToday*100;s.splice(C,0,l)}this.setState({deathsGraph:s});break;case u:for(var h=0;h<this.props.pastWeekInfections.length;h++){var r=this.props.pastWeekInfections[h].hospitalized/t.hospitalized*100;s.splice(h,0,r)}this.setState({hospGraph:s});break;default:for(var o=0;o<this.props.pastWeekInfections.length;o++){var d=this.props.pastWeekInfections[o].newInfectionsToday/t.newInfectionsToday*100;s.splice(o,0,d)}this.setState({casesGraph:s})}}},{key:\"checkForData\",value:function(){var e=this.props.pastWeekInfections.length-1,t=Date.now(),s=Date(this.props.pastWeekInfections[e].date);console.log(t+\" \"+s),this.props.pastWeekInfections[e].date===t&&null===this.props.pastWeekInfections[e].newInfectionsToday&&null===this.props.countyData[1].newInfectionsToday?this.setState({noData:!0}):this.setState({noData:!1})}},{key:\"infectionsChange\",value:function(){!0===this.props.newInfectionsIncrease?this.setState({newInfectionsChangeText:\"Increase today\",newInfectionsPercentChange:\"\\u2191\"+this.props.generalData.newInfectionsPercentChange}):this.setState({newInfectionsChangeText:\"Decrease today\",newInfectionsPercentChange:\"\\u2193\"+this.props.generalData.newInfectionsPercentChange})}},{key:\"render\",value:function(){var e=this.props&&this.props.countyData.length>0&&\"#N/A\"!==this.props.countyData[1].cases?this.props.countyData.map((function(e){var t=e.countyName.replace(/_/g,\" \");return Object(a.jsxs)(\"li\",{className:\"county-list\",children:[Object(a.jsx)(\"span\",{className:\"county-rank\",children:e.rank}),Object(a.jsx)(\"span\",{className:\"county-name\",children:t}),Object(a.jsx)(\"span\",{className:\"county-cases\",children:e.cases})]})})):Object(a.jsx)(\"span\",{children:\"Today's data not available yet :(\"});return Object(a.jsxs)(\"div\",{children:[Object(a.jsx)(\"div\",{className:!0===this.state.noData?\"no-data-hide\":\"no-data-show\",children:Object(a.jsxs)(\"div\",{className:\"no-data-block\",children:[Object(a.jsxs)(\"span\",{className:\"no-data-text\",children:[\"today's data not available yet \",Object(a.jsx)(\"br\",{})]}),Object(a.jsx)(\"span\",{className:\"no-data-text\",children:\"check back soon, we'll update as soon as it's here\"})]})}),Object(a.jsxs)(g.a,Object(j.a)(Object(j.a)({},{arrows:!0,dots:!0,infinite:!0,fade:!0,speed:500,slidesToShow:1,slidesToScroll:1,className:\"slider\",adaptiveHeight:!0}),{},{children:[Object(a.jsx)(\"div\",{className:\"slider-slide slide-1\",children:Object(a.jsxs)(\"div\",{className:\"slide-text\",children:[Object(a.jsx)(\"span\",{className:\"report-date\",children:this.props.generalData.date}),Object(a.jsxs)(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[Object(a.jsxs)(\"g\",{clipPath:\"url(#clip0)\",children:[Object(a.jsx)(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),Object(a.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),Object(a.jsx)(\"defs\",{children:Object(a.jsx)(\"clipPath\",{id:\"clip0\",children:Object(a.jsx)(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),Object(a.jsx)(\"span\",{className:\"small-stat\",children:this.state.newInfectionsPercentChange}),Object(a.jsx)(\"span\",{className:\"small-title\",children:this.state.newInfectionsChangeText}),Object(a.jsx)(\"span\",{className:\"big-stat\",children:this.props.generalData.newInfectionsToday}),Object(a.jsx)(\"h2\",{children:\"New Infections\"}),Object(a.jsxs)(\"div\",{className:\"graph\",children:[Object(a.jsx)(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.casesGraph[6],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.casesGraph[5],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.casesGraph[4],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.casesGraph[3],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.casesGraph[2],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.casesGraph[1],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.casesGraph[0],\"%\")},children:\"\\xa0\"})]})]})}),Object(a.jsx)(\"div\",{className:\"slider-slide slide-2\",children:Object(a.jsxs)(\"div\",{className:\"slide-text\",children:[Object(a.jsx)(\"span\",{className:\"report-date\",children:this.props.generalData.date}),Object(a.jsxs)(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[Object(a.jsxs)(\"g\",{clipPath:\"url(#clip0)\",children:[Object(a.jsx)(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),Object(a.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),Object(a.jsx)(\"defs\",{children:Object(a.jsx)(\"clipPath\",{id:\"clip0\",children:Object(a.jsx)(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),Object(a.jsxs)(\"span\",{className:\"small-stat\",children:[this.props.generalData.testsPositivity,\" %\"]}),Object(a.jsx)(\"span\",{className:\"small-title\",children:\"Positive Today\"}),Object(a.jsx)(\"span\",{className:\"big-stat\",children:this.props.generalData.testsCompleted}),Object(a.jsx)(\"h2\",{children:\"Tests Completed\"}),Object(a.jsxs)(\"div\",{className:\"graph\",children:[Object(a.jsx)(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.testsGraph[6],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.testsGraph[5],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.testsGraph[4],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.testsGraph[3],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.testsGraph[2],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.testsGraph[1],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.testsGraph[0],\"%\")},children:\"\\xa0\"})]})]})}),Object(a.jsx)(\"div\",{className:\"slider-slide slide-3\",children:Object(a.jsxs)(\"div\",{className:\"slide-text\",children:[Object(a.jsx)(\"span\",{className:\"report-date\",children:this.props.generalData.date}),Object(a.jsxs)(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[Object(a.jsxs)(\"g\",{clipPath:\"url(#clip0)\",children:[Object(a.jsx)(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),Object(a.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),Object(a.jsx)(\"defs\",{children:Object(a.jsx)(\"clipPath\",{id:\"clip0\",children:Object(a.jsx)(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),Object(a.jsx)(\"span\",{className:\"small-stat\",children:this.props.generalData.deathsToday}),Object(a.jsx)(\"span\",{className:\"small-title\",children:\"Deaths Today\"}),Object(a.jsx)(\"span\",{className:\"big-stat\",children:this.props.generalData.deathsTotal}),Object(a.jsx)(\"h2\",{children:\"Total Deaths\"}),Object(a.jsxs)(\"div\",{className:\"graph\",children:[Object(a.jsx)(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.deathsGraph[6],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.deathsGraph[5],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.deathsGraph[4],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.deathsGraph[3],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.deathsGraph[2],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.deathsGraph[1],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.deathsGraph[0],\"%\")},children:\"\\xa0\"})]})]})}),Object(a.jsx)(\"div\",{className:\"slider-slide slide-4\",children:Object(a.jsxs)(\"div\",{className:\"slide-text\",children:[Object(a.jsx)(\"span\",{className:\"report-date\",children:this.props.generalData.date}),Object(a.jsxs)(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[Object(a.jsxs)(\"g\",{clipPath:\"url(#clip0)\",children:[Object(a.jsx)(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),Object(a.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),Object(a.jsx)(\"defs\",{children:Object(a.jsx)(\"clipPath\",{id:\"clip0\",children:Object(a.jsx)(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),Object(a.jsxs)(\"span\",{className:\"small-stat\",children:[this.props.generalData.icu,\" \",Object(a.jsx)(\"em\",{children:this.props.generalData.ventilator})]}),Object(a.jsx)(\"span\",{className:\"small-title\",children:\"ICU / Ventilator\"}),Object(a.jsx)(\"span\",{className:\"big-stat\",children:this.props.generalData.hospitalized}),Object(a.jsx)(\"h2\",{children:\"Hospitalized\"}),Object(a.jsxs)(\"div\",{className:\"graph\",children:[Object(a.jsx)(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.hospGraph[6],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.hospGraph[5],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.hospGraph[4],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.hospGraph[3],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.hospGraph[2],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.hospGraph[1],\"%\")},children:\"\\xa0\"}),Object(a.jsx)(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.hospGraph[0],\"%\")},children:\"\\xa0\"})]})]})}),Object(a.jsx)(\"div\",{className:\"slider-slide slide-5\",children:Object(a.jsxs)(\"div\",{className:\"slide-text\",children:[Object(a.jsx)(\"span\",{className:\"report-date\",children:this.props.generalData.date}),Object(a.jsx)(\"h2\",{children:\"Cases by County\"}),Object(a.jsx)(\"ul\",{className:\"county-list\",children:e})]})})]}))]})}}]),s}(c.a.Component),y=(s(66),function(e){Object(o.a)(s,e);var t=Object(d.a)(s);function s(e){var a;return Object(l.a)(this,s),(a=t.call(this,e)).state={loading:!1,newInfectionsIncrease:!1,generalData:{date:\"one sec pls\",newInfectionsToday:0,newInfectionsYesterday:0,newInfectionsPercentChange:0,deathsToday:0,deathsTotal:0,testsCompleted:0,testPositivity:0,hospitalized:0,icu:0,icuPercent:0,ventilator:0,ventilatorPercent:0},countyData:\"\",pastWeekInfections:\"\"},a.init=a.init.bind(Object(r.a)(a)),a.populateData=a.populateData.bind(Object(r.a)(a)),a.getUserLocation=a.getUserLocation.bind(Object(r.a)(a)),a.displayLocation=a.displayLocation.bind(Object(r.a)(a)),a}return Object(h.a)(s,[{key:\"componentDidMount\",value:function(){this.init()}},{key:\"componentWillUnmount\",value:function(){}},{key:\"init\",value:function(){var e=this;this.setState({loading:!0});var t=L.a.init({key:\"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\",simpleSheet:!0,callback:this.populateData,orderby:\"rank\",parseNumbers:!0}).then((function(s){return e.populateData(s,t)})).catch((function(e){return console.warn(e)}))}},{key:\"populateData\",value:function(e,t){var s=t.sheets(\"testSheet\").elements[6],a=t.sheets(\"countyRank\").all(),n=t.sheets(\"testSheet\").all();this.setState({generalData:{date:s.date,newInfectionsToday:s.newInfectionsToday,newInfectionsYesterday:s.newInfectionsYesterday,newInfectionsPercentChange:s.newInfectionsPercentChange,deathsToday:s.deathsToday,deathsTotal:s.deathsTotal,testsCompleted:s.testsCompleted,testsPositivity:s.testsPositivity,hospitalized:s.hospitalized,icu:s.icu,icuPercent:s.icuPercent,ventilator:s.ventilator,ventilatorPercent:s.ventilatorPercent},countyData:a,pastWeekInfections:n}),1===Math.sign(parseFloat(s.newInfectionsPercentChange))?this.setState({newInfectionsIncrease:!0}):this.setState({newInfectionsIncrease:!1}),this.setState({loading:!1})}},{key:\"getUserLocation\",value:function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(this.displayLocation):console.log(\"Geolocation not supported\")}},{key:\"displayLocation\",value:function(e){console.log(\"Lat: \"+e.coords.latitude+\" Long: \"+e.coords.longitude)}},{key:\"render\",value:function(){return Object(a.jsxs)(\"div\",{className:\"container\",children:[this.getUserLocation(),Object(a.jsx)(m,{generalData:this.state.generalData,countyData:this.state.countyData,pastWeekInfections:this.state.pastWeekInfections,newInfectionsIncrease:this.state.newInfectionsIncrease})]})}}]),s}(c.a.Component));s(67);var v=function(){return Object(a.jsx)(\"div\",{className:\"App\",children:Object(a.jsx)(y,{})})};C.a.render(Object(a.jsx)(c.a.StrictMode,{children:Object(a.jsx)(v,{})}),document.getElementById(\"root\"))}},[[68,1,2]]]);","name":"static/js/main.412a2c6e.chunk.js","map":{"version":3,"sources":["static/js/main.412a2c6e.chunk.js"],"names":["this","push","33","module","exports","__webpack_require__","66","67","68","__webpack_exports__","r","jsx_runtime","react","react_default","n","react_dom","react_dom_default","classCallCheck","createClass","assertThisInitialized","inherits","createSuper","src_tabletop","tabletop_default","objectSpread2","lib","lib_default","param","SimpleSlider","_React$Component","Object","simpleSlider","_super","props","_this","call","state","noData","newInfectionsChangeText","newInfectionsPercentChange","casesGraph","testsGraph","deathsGraph","hospGraph","getHighest","bind","setGraphHeights","checkForData","infectionsChange","key","value","_this2","setTimeout","pastWeekInfections","length","property","sortedArray","concat","sort","a","b","newInfectionsToday","testsCompleted","deathsToday","hospitalized","highest","array","i","height","splice","console","log","setState","_i","_height","_i2","_height2","_i3","_height3","_i4","_height4","today","Date","now","maybeToday","date","countyData","newInfectionsIncrease","generalData","renderCountyData","cases","map","item","name","countyName","replace","className","children","rank","arrows","dots","infinite","fade","speed","slidesToShow","slidesToScroll","adaptiveHeight","width","viewBox","fill","xmlns","clipPath","d","fillRule","clipRule","id","transform","style","testsPositivity","deathsTotal","icu","ventilator","Component","components_Home_Home","Home","loading","newInfectionsYesterday","testPositivity","icuPercent","ventilatorPercent","init","populateData","getUserLocation","displayLocation","tabletop","simpleSheet","callback","orderby","parseNumbers","then","data","catch","err","warn","todaysData","sheets","elements","all","weeksData","Math","sign","parseFloat","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","components_App_App","render","StrictMode","document","getElementById"],"mappings":"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"},"input":"(this[\"webpackJsonpon-covid\"] = this[\"webpackJsonpon-covid\"] || []).push([[0],{\n\n/***/ 33:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 66:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 67:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 68:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(1);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(25);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./src/index.css\nvar src = __webpack_require__(33);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules\nvar inherits = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js + 4 modules\nvar createSuper = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/tabletop/src/tabletop.js\nvar src_tabletop = __webpack_require__(26);\nvar tabletop_default = /*#__PURE__*/__webpack_require__.n(src_tabletop);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js + 1 modules\nvar objectSpread2 = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./node_modules/react-slick/lib/index.js\nvar lib = __webpack_require__(27);\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// EXTERNAL MODULE: ./node_modules/slick-carousel/slick/slick.css\nvar slick = __webpack_require__(23);\n\n// EXTERNAL MODULE: ./node_modules/slick-carousel/slick/slick-theme.css\nvar slick_theme = __webpack_require__(24);\n\n// CONCATENATED MODULE: ./src/components/SimpleSlider/SimpleSlider.js\n// Import css files\n// Probably unnecessary enum\nvar param={INF:\"newInfectionsToday\",TESTS:\"testsCompleted\",DEATHS:\"deathsToday\",HOSP:\"hospitalized\"};var SimpleSlider_simpleSlider=/*#__PURE__*/function(_React$Component){Object(inherits[\"a\" /* default */])(simpleSlider,_React$Component);var _super=Object(createSuper[\"a\" /* default */])(simpleSlider);function simpleSlider(props){var _this;Object(classCallCheck[\"a\" /* default */])(this,simpleSlider);_this=_super.call(this,props);_this.state={noData:false,newInfectionsChangeText:\"\",newInfectionsPercentChange:\"\",//Heights for bars in each slide's graph\ncasesGraph:[],testsGraph:[],deathsGraph:[],hospGraph:[]};_this.getHighest=_this.getHighest.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));_this.setGraphHeights=_this.setGraphHeights.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));_this.checkForData=_this.checkForData.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));_this.infectionsChange=_this.infectionsChange.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));return _this;}Object(createClass[\"a\" /* default */])(simpleSlider,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//Use 2.5sec timeout to make sure data has been fetched\nsetTimeout(function(){//Check that component has received props and that props are not empty\nif(_this2.props&&_this2.props.pastWeekInfections.length>0){_this2.setGraphHeights(\"newInfectionsToday\");_this2.setGraphHeights(\"testsCompleted\");_this2.setGraphHeights(\"deathsToday\");_this2.setGraphHeights(\"hospitalized\");_this2.checkForData();_this2.infectionsChange();}},2500);}},{key:\"getHighest\",value:function getHighest(property){//Copy data into new array to avoid mutating props\nvar sortedArray=[].concat(this.props.pastWeekInfections);//Switch statement to account for all properties needed to be checked\nswitch(property){case param.INF://Sort array by property\nsortedArray.sort(function(a,b){return a.newInfectionsToday>b.newInfectionsToday?1:-1;});//Return highest sorted element and index of object in original array\nreturn sortedArray[sortedArray.length-1];case param.TESTS:sortedArray.sort(function(a,b){return a.testsCompleted>b.testsCompleted?1:-1;});return sortedArray[sortedArray.length-1];case param.DEATHS:sortedArray.sort(function(a,b){return a.deathsToday>b.deathsToday?1:-1;});return sortedArray[sortedArray.length-1];case param.HOSP:sortedArray.sort(function(a,b){return a.hospitalized>b.hospitalized?1:-1;});return sortedArray[sortedArray.length-1];default:sortedArray.sort(function(a,b){return a.newInfectionsToday>b.newInfectionsToday?1:-1;});return sortedArray[sortedArray.length-1];}}},{key:\"setGraphHeights\",value:function setGraphHeights(property){//Get object with highest value for desired property\nvar highest=this.getHighest(property);var array=[];switch(property){case param.INF://Loop through all objects, compare highest valued property to the rest and divide by 100 to get percentage value\n//Add percentage values to array\nfor(var i=0;i<this.props.pastWeekInfections.length;i++){var height=this.props.pastWeekInfections[i].newInfectionsToday/highest.newInfectionsToday*100;array.splice(i,0,height);}//Set array of percentages to state\nconsole.log(array);this.setState({casesGraph:array});break;case param.TESTS:for(var _i=0;_i<this.props.pastWeekInfections.length;_i++){var _height=this.props.pastWeekInfections[_i].testsCompleted/highest.testsCompleted*100;array.splice(_i,0,_height);}this.setState({testsGraph:array});break;case param.DEATHS:for(var _i2=0;_i2<this.props.pastWeekInfections.length;_i2++){var _height2=this.props.pastWeekInfections[_i2].deathsToday/highest.deathsToday*100;array.splice(_i2,0,_height2);}this.setState({deathsGraph:array});break;case param.HOSP:for(var _i3=0;_i3<this.props.pastWeekInfections.length;_i3++){var _height3=this.props.pastWeekInfections[_i3].hospitalized/highest.hospitalized*100;array.splice(_i3,0,_height3);}this.setState({hospGraph:array});break;default:for(var _i4=0;_i4<this.props.pastWeekInfections.length;_i4++){var _height4=this.props.pastWeekInfections[_i4].newInfectionsToday/highest.newInfectionsToday*100;array.splice(_i4,0,_height4);}this.setState({casesGraph:array});break;}}},{key:\"checkForData\",value:function checkForData(){//Check if today's data is on the sheet yet\nvar length=this.props.pastWeekInfections.length-1;var today=Date.now();var maybeToday=Date(this.props.pastWeekInfections[length].date);console.log(today+\" \"+maybeToday);if(this.props.pastWeekInfections[length].date===today&&this.props.pastWeekInfections[length].newInfectionsToday===null&&this.props.countyData[1].newInfectionsToday===null){this.setState({noData:true});}else this.setState({noData:false});}},{key:\"infectionsChange\",value:function infectionsChange(){if(this.props.newInfectionsIncrease===true){this.setState({newInfectionsChangeText:\"Increase today\",newInfectionsPercentChange:\"↑\"+this.props.generalData.newInfectionsPercentChange});}else{this.setState({newInfectionsChangeText:\"Decrease today\",newInfectionsPercentChange:\"↓\"+this.props.generalData.newInfectionsPercentChange});}}},{key:\"render\",value:function render(){var settings={arrows:true,dots:true,infinite:true,fade:true,speed:500,slidesToShow:1,slidesToScroll:1,className:'slider',adaptiveHeight:true};//If props are received and not empty and not \"#N/A\" then render county data\nvar renderCountyData=this.props&&this.props.countyData.length>0&&this.props.countyData[1].cases!==\"#N/A\"?this.props.countyData.map(function(item){//Replace underscores with spaces in county name\nvar name=item.countyName.replace(/_/g,\" \");return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"li\",{className:\"county-list\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"county-rank\",children:item.rank}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"county-name\",children:name}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"county-cases\",children:item.cases})]});}):/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{children:\"Today's data not available yet :(\"});//If data is not available then display message\nreturn/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:this.state.noData===true?\"no-data-hide\":\"no-data-show\",children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"no-data-block\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"span\",{className:\"no-data-text\",children:[\"today's data not available yet \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"br\",{})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"no-data-text\",children:\"check back soon, we'll update as soon as it's here\"})]})}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(lib_default.a,Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({},settings),{},{children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"slider-slide slide-1\",children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"slide-text\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"report-date\",children:this.props.generalData.date}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"g\",{clipPath:\"url(#clip0)\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"defs\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"clipPath\",{id:\"clip0\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"small-stat\",children:this.state.newInfectionsPercentChange}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"small-title\",children:this.state.newInfectionsChangeText}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"big-stat\",children:this.props.generalData.newInfectionsToday}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h2\",{children:\"New Infections\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"graph\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.casesGraph[6],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.casesGraph[5],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.casesGraph[4],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.casesGraph[3],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.casesGraph[2],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.casesGraph[1],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.casesGraph[0],\"%\")},children:\"\\xA0\"})]})]})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"slider-slide slide-2\",children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"slide-text\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"report-date\",children:this.props.generalData.date}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"g\",{clipPath:\"url(#clip0)\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"defs\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"clipPath\",{id:\"clip0\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"span\",{className:\"small-stat\",children:[this.props.generalData.testsPositivity,\" %\"]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"small-title\",children:\"Positive Today\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"big-stat\",children:this.props.generalData.testsCompleted}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h2\",{children:\"Tests Completed\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"graph\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.testsGraph[6],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.testsGraph[5],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.testsGraph[4],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.testsGraph[3],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.testsGraph[2],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.testsGraph[1],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.testsGraph[0],\"%\")},children:\"\\xA0\"})]})]})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"slider-slide slide-3\",children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"slide-text\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"report-date\",children:this.props.generalData.date}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"g\",{clipPath:\"url(#clip0)\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"defs\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"clipPath\",{id:\"clip0\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"small-stat\",children:this.props.generalData.deathsToday}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"small-title\",children:\"Deaths Today\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"big-stat\",children:this.props.generalData.deathsTotal}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h2\",{children:\"Total Deaths\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"graph\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.deathsGraph[6],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.deathsGraph[5],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.deathsGraph[4],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.deathsGraph[3],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.deathsGraph[2],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.deathsGraph[1],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.deathsGraph[0],\"%\")},children:\"\\xA0\"})]})]})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"slider-slide slide-4\",children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"slide-text\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"report-date\",children:this.props.generalData.date}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"svg\",{width:\"32\",height:\"33\",viewBox:\"0 0 32 33\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"g\",{clipPath:\"url(#clip0)\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{d:\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\",fill:\"#E1643A\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\",fill:\"#E1643A\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"defs\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"clipPath\",{id:\"clip0\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"rect\",{width:\"32\",height:\"32\",fill:\"white\",transform:\"translate(0 0.535294)\"})})})]}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"span\",{className:\"small-stat\",children:[this.props.generalData.icu,\" \",/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"em\",{children:this.props.generalData.ventilator})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"small-title\",children:\"ICU / Ventilator\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"big-stat\",children:this.props.generalData.hospitalized}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h2\",{children:\"Hospitalized\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"graph\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-1 bar-today\",style:{height:\"\".concat(this.state.hospGraph[6],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-2\",style:{height:\"\".concat(this.state.hospGraph[5],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-3\",style:{height:\"\".concat(this.state.hospGraph[4],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-4\",style:{height:\"\".concat(this.state.hospGraph[3],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-5\",style:{height:\"\".concat(this.state.hospGraph[2],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-6\",style:{height:\"\".concat(this.state.hospGraph[1],\"%\")},children:\"\\xA0\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"bar-7\",style:{height:\"\".concat(this.state.hospGraph[0],\"%\")},children:\"\\xA0\"})]})]})}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"slider-slide slide-5\",children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"slide-text\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"span\",{className:\"report-date\",children:this.props.generalData.date}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h2\",{children:\"Cases by County\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"ul\",{className:\"county-list\",children:renderCountyData})]})})]}))]});}}]);return simpleSlider;}(react_default.a.Component);/* harmony default export */ var SimpleSlider = (SimpleSlider_simpleSlider);\n// EXTERNAL MODULE: ./src/components/Home/Home.css\nvar Home_Home = __webpack_require__(66);\n\n// CONCATENATED MODULE: ./src/components/Home/Home.js\n// Import css files\n/* IF CHANGE TO PAPA PARSE IS NECESSARY\r\nCHANGE INIT FUNCTION\r\n    init(){\r\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\r\n          download: true,\r\n          header: true,\r\n          complete: this.populateData\r\n          }\r\n        )\r\n    }\r\nADD IMPORT\r\n    import Papa from 'papaparse';\r\n*/var Home_Home_Home=/*#__PURE__*/function(_React$Component){Object(inherits[\"a\" /* default */])(Home,_React$Component);var _super=Object(createSuper[\"a\" /* default */])(Home);function Home(props){var _this;Object(classCallCheck[\"a\" /* default */])(this,Home);_this=_super.call(this,props);_this.state={loading:false,//Increase today or Decrease today based on case growth from previous day\n//Used in slide 1 of slider\nnewInfectionsIncrease:false,//Ontario-wide data\ngeneralData:{date:\"one sec pls\",newInfectionsToday:0,newInfectionsYesterday:0,newInfectionsPercentChange:0,deathsToday:0,deathsTotal:0,testsCompleted:0,testPositivity:0,hospitalized:0,icu:0,icuPercent:0,ventilator:0,ventilatorPercent:0},//Individual county data\ncountyData:\"\",//General data for the entire week\npastWeekInfections:\"\"};_this.init=_this.init.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));_this.populateData=_this.populateData.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));_this.getUserLocation=_this.getUserLocation.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));_this.displayLocation=_this.displayLocation.bind(Object(assertThisInitialized[\"a\" /* default */])(_this));return _this;}//runs init method on component mount\nObject(createClass[\"a\" /* default */])(Home,[{key:\"componentDidMount\",value:function componentDidMount(){this.init();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}//grabs data from Google spreadsheet and sends to populateData method\n},{key:\"init\",value:function init(){var _this2=this;this.setState({loading:true});var tabletop=tabletop_default.a.init({key:\"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\",simpleSheet:true,callback:this.populateData,orderby:\"rank\",parseNumbers:true}).then(function(data){return _this2.populateData(data,tabletop);}).catch(function(err){return console.warn(err);});}},{key:\"populateData\",value:function populateData(data,tabletop){//Grab today's stats from \"dataSnapshot\" sheet tab, using last element for today's data\nvar todaysData=tabletop.sheets(\"testSheet\").elements[6];//Grab county stats from \"countyRank\" sheet tab\nvar countyData=tabletop.sheets(\"countyRank\").all();//Grab historical data from past week from \"dataSnapshot\" sheet tab\nvar weeksData=tabletop.sheets(\"testSheet\").all();//Debug to console\n/*\r\n        console.log(todaysData);\r\n        console.log(countyData);\r\n        console.log(weeksData);\r\n        */ //Set Ontario-wide stats and county stats\n//County data is left as-is and passed to slider for sake of simplicity\n//Weekly data is the same\nthis.setState({generalData:{date:todaysData.date,newInfectionsToday:todaysData.newInfectionsToday,newInfectionsYesterday:todaysData.newInfectionsYesterday,newInfectionsPercentChange:todaysData.newInfectionsPercentChange,deathsToday:todaysData.deathsToday,deathsTotal:todaysData.deathsTotal,testsCompleted:todaysData.testsCompleted,testsPositivity:todaysData.testsPositivity,hospitalized:todaysData.hospitalized,icu:todaysData.icu,icuPercent:todaysData.icuPercent,ventilator:todaysData.ventilator,ventilatorPercent:todaysData.ventilatorPercent},countyData:countyData,pastWeekInfections:weeksData});//\"↓ Decrease today\" \n//\"↑ Increase today\"\n//Set text based on case growth, used in slide 1 of slider\nif(Math.sign(parseFloat(todaysData.newInfectionsPercentChange))===1)this.setState({newInfectionsIncrease:true});else this.setState({newInfectionsIncrease:false});this.setState({loading:false});}//Get user location if they allow it, pass it to display function\n},{key:\"getUserLocation\",value:function getUserLocation(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(this.displayLocation);}else{console.log(\"Geolocation not supported\");}}//Display user location, currently in console\n},{key:\"displayLocation\",value:function displayLocation(position){console.log(\"Lat: \"+position.coords.latitude+\" Long: \"+position.coords.longitude);}},{key:\"render\",value:function render(){return/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(\"div\",{className:\"container\",children:[this.getUserLocation(),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(SimpleSlider,{generalData:this.state.generalData,countyData:this.state.countyData,pastWeekInfections:this.state.pastWeekInfections,newInfectionsIncrease:this.state.newInfectionsIncrease})]});}}]);return Home;}(react_default.a.Component);/* harmony default export */ var components_Home_Home = (Home_Home_Home);\n// EXTERNAL MODULE: ./src/components/App/App.css\nvar App = __webpack_require__(67);\n\n// CONCATENATED MODULE: ./src/components/App/App.js\nfunction App_App(){return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"App\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_Home_Home,{})});}/* harmony default export */ var components_App_App = (App_App);\n// CONCATENATED MODULE: ./src/index.js\nreact_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react_default.a.StrictMode,{children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(components_App_App,{})}),document.getElementById('root'));\n\n/***/ })\n\n},[[68,1,2]]]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\mini-css-extract-plugin\\dist\\loader.js??ref--5-oneOf-4-0!C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\css-loader\\dist\\cjs.js??ref--5-oneOf-4-1!C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\postcss-loader\\src\\index.js??postcss!C:\\Users\\Doug\\Desktop\\on-covid\\src\\index.css","C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\mini-css-extract-plugin\\dist\\loader.js??ref--5-oneOf-4-0!C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\css-loader\\dist\\cjs.js??ref--5-oneOf-4-1!C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\postcss-loader\\src\\index.js??postcss!C:\\Users\\Doug\\Desktop\\on-covid\\src\\components\\Home\\Home.css","C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\mini-css-extract-plugin\\dist\\loader.js??ref--5-oneOf-4-0!C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\css-loader\\dist\\cjs.js??ref--5-oneOf-4-1!C:\\Users\\Doug\\Desktop\\on-covid\\node_modules\\postcss-loader\\src\\index.js??postcss!C:\\Users\\Doug\\Desktop\\on-covid\\src\\components\\App\\App.css","C:/Users/Doug/Desktop/on-covid/src/components/SimpleSlider/SimpleSlider.js","C:/Users/Doug/Desktop/on-covid/src/components/Home/Home.js","C:/Users/Doug/Desktop/on-covid/src/components/App/App.js","C:/Users/Doug/Desktop/on-covid/src/index.js"],"names":["param","INF","TESTS","DEATHS","HOSP","simpleSlider","props","state","noData","newInfectionsChangeText","newInfectionsPercentChange","casesGraph","testsGraph","deathsGraph","hospGraph","getHighest","bind","setGraphHeights","checkForData","infectionsChange","setTimeout","pastWeekInfections","length","property","sortedArray","concat","sort","a","b","newInfectionsToday","testsCompleted","deathsToday","hospitalized","highest","array","i","height","splice","console","log","setState","today","Date","now","maybeToday","date","countyData","newInfectionsIncrease","generalData","settings","arrows","dots","infinite","fade","speed","slidesToShow","slidesToScroll","className","adaptiveHeight","renderCountyData","cases","map","item","name","countyName","replace","rank","testsPositivity","deathsTotal","icu","ventilator","React","Component","Home","loading","newInfectionsYesterday","testPositivity","icuPercent","ventilatorPercent","init","populateData","getUserLocation","displayLocation","tabletop","Tabletop","key","simpleSheet","callback","orderby","parseNumbers","then","data","catch","err","warn","todaysData","sheets","elements","all","weeksData","Math","sign","parseFloat","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\n// Import css files\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n// Probably unnecessary enum\r\nconst param = {\r\n    INF: \"newInfectionsToday\",\r\n    TESTS: \"testsCompleted\",\r\n    DEATHS: \"deathsToday\",\r\n    HOSP: \"hospitalized\"\r\n}\r\n\r\nclass simpleSlider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            noData: false,\r\n            newInfectionsChangeText: \"\",\r\n            newInfectionsPercentChange: \"\",\r\n            //Heights for bars in each slide's graph\r\n            casesGraph: [],\r\n            testsGraph: [],\r\n            deathsGraph: [],\r\n            hospGraph: []\r\n        }\r\n\r\n        this.getHighest = this.getHighest.bind(this);\r\n        this.setGraphHeights = this.setGraphHeights.bind(this);\r\n        this.checkForData = this.checkForData.bind(this);\r\n        this.infectionsChange = this.infectionsChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        //Use 2.5sec timeout to make sure data has been fetched\r\n        setTimeout(() => {\r\n        //Check that component has received props and that props are not empty\r\n        if(this.props && this.props.pastWeekInfections.length > 0){\r\n            this.setGraphHeights(\"newInfectionsToday\");\r\n            this.setGraphHeights(\"testsCompleted\");\r\n            this.setGraphHeights(\"deathsToday\");\r\n            this.setGraphHeights(\"hospitalized\");\r\n            this.checkForData();\r\n            this.infectionsChange();\r\n        }\r\n        }, 2500);\r\n    }\r\n\r\n    getHighest(property){\r\n        //Copy data into new array to avoid mutating props\r\n        let sortedArray = [].concat(this.props.pastWeekInfections);\r\n        //Switch statement to account for all properties needed to be checked\r\n        switch(property){\r\n            case param.INF:\r\n                //Sort array by property\r\n                sortedArray.sort((a,b) => (a.newInfectionsToday > b.newInfectionsToday ? 1 : -1));\r\n            //Return highest sorted element and index of object in original array\r\n            return sortedArray[sortedArray.length - 1];\r\n\r\n            case param.TESTS:\r\n                sortedArray.sort((a,b) => (a.testsCompleted > b.testsCompleted ? 1 : -1));\r\n            return sortedArray[sortedArray.length - 1];\r\n\r\n            case param.DEATHS:\r\n                sortedArray.sort((a,b) => (a.deathsToday > b.deathsToday ? 1 : -1));\r\n            return sortedArray[sortedArray.length - 1];\r\n\r\n            case param.HOSP:\r\n                sortedArray.sort((a,b) => (a.hospitalized > b.hospitalized ? 1 : -1));\r\n            return sortedArray[sortedArray.length - 1];\r\n\r\n            default:\r\n                sortedArray.sort((a,b) => (a.newInfectionsToday > b.newInfectionsToday ? 1 : -1));\r\n            return sortedArray[sortedArray.length - 1];\r\n        }\r\n    }\r\n\r\n    setGraphHeights(property) {\r\n        //Get object with highest value for desired property\r\n        var highest = this.getHighest(property);\r\n        var array = [];\r\n\r\n        switch(property){\r\n            case param.INF:\r\n                //Loop through all objects, compare highest valued property to the rest and divide by 100 to get percentage value\r\n                //Add percentage values to array\r\n                for(let i=0;i<this.props.pastWeekInfections.length;i++){\r\n                    let height = (this.props.pastWeekInfections[i].newInfectionsToday / highest.newInfectionsToday) * 100;\r\n                    array.splice(i,0,height);\r\n                }\r\n                //Set array of percentages to state\r\n                console.log(array);\r\n                this.setState({ casesGraph: array });\r\n            break;\r\n\r\n            case param.TESTS:\r\n                for(let i=0;i<this.props.pastWeekInfections.length;i++){\r\n                    let height = (this.props.pastWeekInfections[i].testsCompleted / highest.testsCompleted) * 100;\r\n                    array.splice(i,0,height);\r\n                }\r\n                this.setState({ testsGraph: array });\r\n            break;\r\n\r\n            case param.DEATHS:\r\n                for(let i=0;i<this.props.pastWeekInfections.length;i++){\r\n                    let height = (this.props.pastWeekInfections[i].deathsToday / highest.deathsToday) * 100;\r\n                    array.splice(i,0,height);\r\n                }\r\n                this.setState({ deathsGraph: array });\r\n            break;\r\n\r\n            case param.HOSP:\r\n                for(let i=0;i<this.props.pastWeekInfections.length;i++){\r\n                    let height = (this.props.pastWeekInfections[i].hospitalized / highest.hospitalized) * 100;\r\n                    array.splice(i,0,height);\r\n                }\r\n                this.setState({ hospGraph: array });\r\n            break;\r\n\r\n            default:\r\n                for(let i=0;i<this.props.pastWeekInfections.length;i++){\r\n                    let height = (this.props.pastWeekInfections[i].newInfectionsToday / highest.newInfectionsToday) * 100;\r\n                    array.splice(i,0,height);\r\n                }\r\n                this.setState({ casesGraph: array });\r\n            break;\r\n        }\r\n    }\r\n\r\n    checkForData(){\r\n        //Check if today's data is on the sheet yet\r\n        let length = this.props.pastWeekInfections.length - 1;\r\n        let today = Date.now();\r\n        let maybeToday = Date(this.props.pastWeekInfections[length].date);\r\n        console.log(today + \" \" + maybeToday);\r\n        if(this.props.pastWeekInfections[length].date === today\r\n            && this.props.pastWeekInfections[length].newInfectionsToday === null\r\n            && this.props.countyData[1].newInfectionsToday === null){\r\n                this.setState({ noData : true })\r\n            }\r\n            else\r\n                this.setState({ noData: false })\r\n        }\r\n\r\n        infectionsChange(){\r\n            if(this.props.newInfectionsIncrease === true){\r\n                this.setState({ \r\n                    newInfectionsChangeText: \"Increase today\",\r\n                    newInfectionsPercentChange: \"↑\" + this.props.generalData.newInfectionsPercentChange\r\n                })\r\n\r\n            } else {\r\n                this.setState({ \r\n                    newInfectionsChangeText: \"Decrease today\",\r\n                    newInfectionsPercentChange: \"↓\" + this.props.generalData.newInfectionsPercentChange\r\n                })\r\n            }\r\n        }\r\n\r\n  render() {\r\n    var settings = {\r\n        arrows: true,\r\n        dots: true,\r\n        infinite: true,\r\n        fade: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        className: 'slider',\r\n        adaptiveHeight: true\r\n    };\r\n\r\n    //If props are received and not empty and not \"#N/A\" then render county data\r\n    let renderCountyData = this.props && this.props.countyData.length > 0 && this.props.countyData[1].cases !== \"#N/A\" ?\r\n        this.props.countyData.map(item =>{\r\n        //Replace underscores with spaces in county name\r\n        let name = item.countyName.replace(/_/g,\" \");\r\n        return(\r\n            <li className=\"county-list\">\r\n                <span className=\"county-rank\">{item.rank}</span>\r\n                <span className=\"county-name\">{name}</span>\r\n                <span className=\"county-cases\">{item.cases}</span>\r\n            </li>\r\n        )}) : <span>Today's data not available yet :(</span>; //If data is not available then display message\r\n\r\n    return (\r\n    <div>\r\n        <div className={this.state.noData === true ? \"no-data-hide\" : \"no-data-show\"}>\r\n            <div className=\"no-data-block\">\r\n                <span className=\"no-data-text\">today's data not available yet <br /></span>\r\n                <span className=\"no-data-text\">check back soon, we'll update as soon as it's here</span>\r\n            </div>\r\n        </div>\r\n        <Slider {...settings}>\r\n            <div className=\"slider-slide slide-1\">\r\n              <div className=\"slide-text\">\r\n                <span className=\"report-date\">{this.props.generalData.date}</span>\r\n                <svg width=\"32\" height=\"33\" viewBox=\"0 0 32 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g clipPath=\"url(#clip0)\">\r\n                <path d=\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\" fill=\"#E1643A\"/>\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\" fill=\"#E1643A\"/>\r\n                </g>\r\n                <defs>\r\n                <clipPath id=\"clip0\">\r\n                <rect width=\"32\" height=\"32\" fill=\"white\" transform=\"translate(0 0.535294)\"/>\r\n                </clipPath>\r\n                </defs>\r\n                </svg>\r\n                <span className=\"small-stat\">{this.state.newInfectionsPercentChange}</span>\r\n                <span className=\"small-title\">{this.state.newInfectionsChangeText}</span>\r\n                <span className=\"big-stat\">{this.props.generalData.newInfectionsToday}</span>\r\n                <h2>New Infections</h2>\r\n                <div className=\"graph\">\r\n                  <span className=\"bar-1 bar-today\" style={{height: `${this.state.casesGraph[6]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-2\" style={{height: `${this.state.casesGraph[5]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-3\" style={{height: `${this.state.casesGraph[4]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-4\" style={{height: `${this.state.casesGraph[3]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-5\" style={{height: `${this.state.casesGraph[2]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-6\" style={{height: `${this.state.casesGraph[1]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-7\" style={{height: `${this.state.casesGraph[0]}%` }}>&nbsp;</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider-slide slide-2\">\r\n              <div className=\"slide-text\">\r\n                <span className=\"report-date\">{this.props.generalData.date}</span>\r\n                <svg width=\"32\" height=\"33\" viewBox=\"0 0 32 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g clipPath=\"url(#clip0)\">\r\n                <path d=\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\" fill=\"#E1643A\"/>\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\" fill=\"#E1643A\"/>\r\n                </g>\r\n                <defs>\r\n                <clipPath id=\"clip0\">\r\n                <rect width=\"32\" height=\"32\" fill=\"white\" transform=\"translate(0 0.535294)\"/>\r\n                </clipPath>\r\n                </defs>\r\n                </svg>\r\n                <span className=\"small-stat\">{this.props.generalData.testsPositivity} %</span>\r\n                <span className=\"small-title\">Positive Today</span>\r\n                <span className=\"big-stat\">{this.props.generalData.testsCompleted}</span>\r\n                <h2>Tests Completed</h2>\r\n                <div className=\"graph\">\r\n                  <span className=\"bar-1 bar-today\" style={{height: `${this.state.testsGraph[6]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-2\" style={{height: `${this.state.testsGraph[5]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-3\" style={{height: `${this.state.testsGraph[4]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-4\" style={{height: `${this.state.testsGraph[3]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-5\" style={{height: `${this.state.testsGraph[2]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-6\" style={{height: `${this.state.testsGraph[1]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-7\" style={{height: `${this.state.testsGraph[0]}%` }}>&nbsp;</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider-slide slide-3\">\r\n              <div className=\"slide-text\">\r\n                <span className=\"report-date\">{this.props.generalData.date}</span>\r\n                <svg width=\"32\" height=\"33\" viewBox=\"0 0 32 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g clipPath=\"url(#clip0)\">\r\n                <path d=\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\" fill=\"#E1643A\"/>\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\" fill=\"#E1643A\"/>\r\n                </g>\r\n                <defs>\r\n                <clipPath id=\"clip0\">\r\n                <rect width=\"32\" height=\"32\" fill=\"white\" transform=\"translate(0 0.535294)\"/>\r\n                </clipPath>\r\n                </defs>\r\n                </svg>\r\n                <span className=\"small-stat\">{this.props.generalData.deathsToday}</span>\r\n                <span className=\"small-title\">Deaths Today</span>\r\n                <span className=\"big-stat\">{this.props.generalData.deathsTotal}</span>\r\n                <h2>Total Deaths</h2>\r\n                <div className=\"graph\">\r\n                  <span className=\"bar-1 bar-today\" style={{height: `${this.state.deathsGraph[6]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-2\" style={{height: `${this.state.deathsGraph[5]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-3\" style={{height: `${this.state.deathsGraph[4]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-4\" style={{height: `${this.state.deathsGraph[3]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-5\" style={{height: `${this.state.deathsGraph[2]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-6\" style={{height: `${this.state.deathsGraph[1]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-7\" style={{height: `${this.state.deathsGraph[0]}%` }}>&nbsp;</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider-slide slide-4\">\r\n              <div className=\"slide-text\">\r\n                <span className=\"report-date\">{this.props.generalData.date}</span>\r\n                <svg width=\"32\" height=\"33\" viewBox=\"0 0 32 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g clipPath=\"url(#clip0)\">\r\n                <path d=\"M31.2159 16.8447C30.6855 16.1674 29.9846 15.7195 29.1652 15.5751C28.3459 15.4306 27.5341 15.6117 26.867 16.0778C26.8367 14.7753 26.5321 13.5542 26.0274 12.3626C27.8033 12.6109 29.3819 11.3975 29.6814 9.69919C29.9289 7.92682 28.7122 6.35027 27.0105 6.0502C25.2976 5.81304 23.7411 6.9006 23.3786 8.58784C22.4292 7.70699 21.3204 6.99261 20.1672 6.52985C21.5866 5.48297 21.8785 3.459 20.8286 2.04159C19.7788 0.624184 17.7508 0.331454 16.3315 1.37834C14.9863 2.37343 14.6535 4.26049 15.5662 5.71857C14.2613 5.7479 13.038 6.05108 11.8446 6.55407C12.0921 4.7817 10.8754 3.20515 9.17363 2.90509C7.40886 2.59391 5.76715 3.79616 5.51962 5.56852C5.28318 7.27799 6.37385 8.83231 8.0645 9.19528C7.18265 10.1424 6.46769 11.2486 6.00484 12.3993C4.95503 10.9819 2.92705 10.6891 1.5077 11.736C0.0883442 12.7829 -0.20355 14.8069 0.846269 16.2243C1.84415 17.5677 3.73498 17.9011 5.19518 16.9911C5.22546 18.2936 5.53004 19.5147 6.03479 20.7063C4.25893 20.4581 2.68025 21.6714 2.38078 23.3698C2.08132 25.0681 3.34997 26.7187 5.05172 27.0187C6.76456 27.2559 8.32106 26.1683 8.68355 24.4811C9.63302 25.362 10.7418 26.0763 11.895 26.5391C10.4756 27.586 10.1837 29.61 11.2335 31.0274C12.2834 32.4448 14.3113 32.7375 15.7307 31.6906C17.0759 30.6955 17.4087 28.8085 16.496 27.3504C17.8009 27.321 19.0241 27.0179 20.2176 26.5149C19.9701 28.2872 21.1868 29.8638 22.8886 30.1639C24.6644 30.4121 26.2431 29.1988 26.5426 27.5004C26.779 25.791 25.6883 24.2366 23.9977 23.8737C24.8795 22.9266 25.5945 21.8204 26.0573 20.6697C27.1072 22.0871 29.1351 22.3798 30.5545 21.3329C31.9738 20.286 32.2657 18.2621 31.2159 16.8447ZM28.2779 20.6072C27.5846 20.485 27.0209 19.9964 26.8056 19.3747C26.7128 19.1638 26.5459 19.0047 26.2938 18.9602L25.8526 18.8824L22.8903 18.3601C23.0093 19.1594 23.6139 19.7848 24.4332 19.9293L24.8744 20.0071C24.4116 21.1578 23.7707 22.2122 22.9 23.0964L22.6403 22.7263C22.1729 22.0602 21.3127 21.7788 20.5639 21.9711L21.6026 23.4514L21.9662 23.9695L22.5375 24.7836C22.5894 24.8577 22.6414 24.9317 22.7044 24.9428C22.8194 25.0279 22.9454 25.0501 23.0826 25.0095C23.7461 24.9319 24.4061 25.2428 24.8216 25.835C25.4449 26.7232 25.2341 27.9183 24.3558 28.4768C23.4775 29.0354 22.2688 28.8872 21.7086 28.0101C21.2931 27.418 21.2891 26.7038 21.5261 26.097C21.6224 25.9194 21.6037 25.6567 21.4479 25.4347L21.3551 25.2237L19.6412 22.7812C19.2041 23.4176 19.1748 24.3204 19.6423 24.9866L19.902 25.3566C18.7715 25.8707 17.5594 26.111 16.3175 26.1515L16.4062 25.6483C16.5504 24.8305 16.1682 24.0497 15.4562 23.6647L15.1456 25.426L14.9349 26.6211L14.8573 27.0614C14.8129 27.313 14.9057 27.524 15.0726 27.6831C15.5844 28.0976 15.7886 28.7822 15.6777 29.4113C15.4891 30.4806 14.5256 31.1538 13.4541 30.9649C12.3827 30.776 11.7075 29.8138 11.896 28.7444C12.018 28.0525 12.5071 27.4902 13.1298 27.2757C13.3411 27.1832 13.5004 27.0168 13.5448 26.7651L13.6224 26.3248L13.8221 25.1926L14.1326 23.4313C13.3319 23.5496 12.7057 24.1526 12.5615 24.9703L12.4839 25.4106C11.3307 24.9479 10.2739 24.3075 9.38742 23.4378L9.75801 23.1788C10.4251 22.7127 10.7064 21.8543 10.5133 21.1069L8.05626 22.8788L7.69676 23.0748C7.53743 23.2413 7.44113 23.4189 7.39676 23.6705C7.47493 24.3329 7.16385 24.9914 6.57089 25.4057C5.68147 26.0272 4.48394 25.816 3.92373 24.939C3.36352 24.0619 3.51123 22.8557 4.38957 22.2971C4.98252 21.8828 5.698 21.8792 6.3061 22.1162C6.48409 22.2124 6.74729 22.194 6.96965 22.0386L7.78496 21.4689L8.30379 21.1064L9.78617 20.0706C9.14832 19.6339 8.25484 19.5412 7.57668 20.0702L7.20609 20.3291C6.69024 19.2005 6.44869 17.9904 6.40732 16.7508L6.84851 16.8286C7.66787 16.9731 8.44991 16.5921 8.83511 15.8818L5.93584 15.3706L5.49464 15.2928C5.24253 15.2483 5.03127 15.3408 4.87194 15.5072C4.44589 16.0807 3.76015 16.2841 3.06685 16.1618C1.99538 15.9729 1.32021 15.0107 1.50876 13.9414C1.69731 12.872 2.66086 12.1988 3.73233 12.3877C4.42563 12.51 4.98936 12.9985 5.20468 13.6202C5.29746 13.8311 5.46436 13.9903 5.71647 14.0347L7.29216 14.3126L7.35519 14.3237L9.05694 14.6237C8.93792 13.8245 8.33335 13.199 7.51399 13.0545L7.0728 12.9767C7.53564 11.826 8.17648 10.7716 9.04724 9.88742L9.30693 10.2575C9.77435 10.9236 10.6346 11.205 11.3833 11.0128L9.66942 8.57026L9.40974 8.20019C9.25393 7.97814 9.07594 7.8819 8.81273 7.90034C8.14918 7.97792 7.48915 7.66696 7.07366 7.07484C6.45042 6.18665 6.66116 4.99152 7.5395 4.43296C8.42892 3.8115 9.62645 4.02265 10.1867 4.89972C10.6021 5.49185 10.6062 6.206 10.3692 6.81279C10.2729 6.99038 10.2916 7.2531 10.4474 7.47515L11.0187 8.28932L11.3823 8.80742L12.421 10.2877C12.8581 9.65138 12.9504 8.75964 12.4199 8.08239L12.1602 7.71231C13.2907 7.1982 14.5028 6.95793 15.7447 6.91748L15.6671 7.3578C15.5229 8.17552 15.9051 8.95635 16.6171 9.34132L16.9276 7.58007L17.1273 6.44783L17.2049 6.00752C17.2493 5.75591 17.1565 5.54498 16.9896 5.38583C16.4778 4.9713 16.2106 4.2756 16.3326 3.58368C16.5211 2.51435 17.4847 1.8411 18.5561 2.03003C19.6276 2.21896 20.3028 3.18116 20.1142 4.25049C19.9922 4.94241 19.5031 5.50475 18.8804 5.71924C18.6692 5.8117 18.5098 5.97818 18.4655 6.22979L18.3878 6.6701L18.1882 7.80233L17.8776 9.56359C18.6783 9.44534 19.3046 8.84233 19.4487 8.0246L19.5264 7.58429C20.6795 8.04706 21.7364 8.68741 22.6228 9.55715L22.2522 9.81609C21.5852 10.2822 21.3038 11.1406 21.497 11.8881L22.9794 10.8523L23.4982 10.4898L24.3135 9.92011C24.4728 9.75364 24.5691 9.57604 24.6135 9.32444C24.5388 8.27355 25.2836 7.36714 26.3475 7.23045C27.011 7.15288 27.671 7.46383 28.0865 8.05595C28.7098 8.94414 28.499 10.1393 27.6207 10.6978C27.0277 11.1121 26.3123 11.1157 25.7042 10.8788C25.5262 10.7825 25.263 10.801 25.0406 10.9563L24.733 11.2264L22.2871 12.9354C22.925 13.3722 23.8295 13.4019 24.4966 12.9358L24.8672 12.6769C25.383 13.8056 25.6246 15.0156 25.666 16.2552L25.1617 16.1663C24.3424 16.0218 23.5603 16.4028 23.1751 17.1132L24.9399 17.4243L25.0029 17.4354L26.6417 17.7244C26.8938 17.7689 27.105 17.6764 27.2644 17.5099C27.6163 16.9882 28.3131 16.722 28.9434 16.8331C30.0149 17.022 30.69 17.9842 30.5015 19.0536C30.3129 20.1229 29.3494 20.7961 28.2779 20.6072Z\" fill=\"#E1643A\"/>\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.8861 17.9974C17.4449 17.9196 17.1964 17.4866 17.2629 17.1092L17.5069 15.7254C17.5846 15.2851 18.0182 15.0372 18.3963 15.1039C18.7745 15.1706 19.0861 15.6147 19.0196 15.9921L18.7756 17.3759C18.6979 17.8163 18.3273 18.0752 17.8861 17.9974ZM17.9992 21.7791C17.8101 21.7458 17.6321 21.6495 17.5282 21.5015C16.4154 20.073 14.4615 19.7285 12.9272 20.6902C12.5566 20.9491 12.0635 20.7973 11.8038 20.4273C11.5441 20.0572 11.6959 19.5651 12.0665 19.3061C14.2679 17.8783 17.1671 18.3895 18.8104 20.4953C19.0701 20.8654 18.9814 21.3686 18.6738 21.6386C18.4626 21.7311 18.2513 21.8236 17.9992 21.7791ZM13.1661 16.3868C13.0995 16.7643 13.3481 17.1972 13.7893 17.275C14.2305 17.3528 14.6011 17.0939 14.6788 16.6536L14.9228 15.2697C14.9893 14.8923 14.6777 14.4482 14.2995 14.3815C13.9214 14.3149 13.4877 14.5627 13.4101 15.003L13.1661 16.3868Z\" fill=\"#E1643A\"/>\r\n                </g>\r\n                <defs>\r\n                <clipPath id=\"clip0\">\r\n                <rect width=\"32\" height=\"32\" fill=\"white\" transform=\"translate(0 0.535294)\"/>\r\n                </clipPath>\r\n                </defs>\r\n                </svg>\r\n                <span className=\"small-stat\">{this.props.generalData.icu} <em>{this.props.generalData.ventilator}</em></span>\r\n                <span className=\"small-title\">ICU / Ventilator</span>\r\n                <span className=\"big-stat\">{this.props.generalData.hospitalized}</span>\r\n                <h2>Hospitalized</h2>\r\n                <div className=\"graph\">\r\n                  <span className=\"bar-1 bar-today\" style={{height: `${this.state.hospGraph[6]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-2\" style={{height: `${this.state.hospGraph[5]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-3\" style={{height: `${this.state.hospGraph[4]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-4\" style={{height: `${this.state.hospGraph[3]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-5\" style={{height: `${this.state.hospGraph[2]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-6\" style={{height: `${this.state.hospGraph[1]}%` }}>&nbsp;</span>\r\n                  <span className=\"bar-7\" style={{height: `${this.state.hospGraph[0]}%` }}>&nbsp;</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider-slide slide-5\">\r\n              <div className=\"slide-text\">\r\n                <span className=\"report-date\">{this.props.generalData.date}</span>\r\n                <h2>Cases by County</h2>\r\n                    <ul className=\"county-list\">\r\n                        {renderCountyData}\r\n                    </ul>\r\n              </div>\r\n            </div>\r\n        </Slider>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default simpleSlider;\r\n","import React from 'react';\r\nimport Tabletop from 'tabletop';\r\nimport SimpleSlider from '../SimpleSlider/SimpleSlider'\r\n\r\n// Import css files\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport './Home.css';\r\n\r\n/* IF CHANGE TO PAPA PARSE IS NECESSARY\r\nCHANGE INIT FUNCTION\r\n    init(){\r\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\r\n          download: true,\r\n          header: true,\r\n          complete: this.populateData\r\n          }\r\n        )\r\n    }\r\nADD IMPORT\r\n    import Papa from 'papaparse';\r\n*/\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            //Increase today or Decrease today based on case growth from previous day\r\n            //Used in slide 1 of slider\r\n            newInfectionsIncrease: false,\r\n            //Ontario-wide data\r\n            generalData: {\r\n                date: \"one sec pls\",\r\n                newInfectionsToday: 0,\r\n                newInfectionsYesterday: 0,\r\n                newInfectionsPercentChange: 0,\r\n                deathsToday: 0,\r\n                deathsTotal: 0,\r\n                testsCompleted: 0,\r\n                testPositivity: 0,\r\n                hospitalized: 0,\r\n                icu: 0,\r\n                icuPercent: 0,\r\n                ventilator: 0,\r\n                ventilatorPercent: 0,\r\n            },\r\n            //Individual county data\r\n            countyData: \"\",\r\n            //General data for the entire week\r\n            pastWeekInfections: \"\"\r\n        }\r\n        this.init = this.init.bind(this);\r\n        this.populateData = this.populateData.bind(this);\r\n        this.getUserLocation = this.getUserLocation.bind(this);\r\n        this.displayLocation = this.displayLocation.bind(this);\r\n    }\r\n    \r\n    //runs init method on component mount\r\n    componentDidMount(){\r\n        this.init();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    //grabs data from Google spreadsheet and sends to populateData method\r\n    init(){\r\n        this.setState({ loading: true })\r\n        var tabletop = Tabletop.init({\r\n            key: \"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\",\r\n            simpleSheet: true,\r\n            callback: this.populateData,\r\n            orderby: \"rank\",\r\n            parseNumbers: true\r\n        })\r\n        .then((data) => this.populateData(data, tabletop))\r\n        .catch((err) => console.warn(err))\r\n    }\r\n\r\n    populateData(data, tabletop){\r\n        //Grab today's stats from \"dataSnapshot\" sheet tab, using last element for today's data\r\n        let todaysData = tabletop.sheets(\"testSheet\").elements[6];\r\n        //Grab county stats from \"countyRank\" sheet tab\r\n        let countyData = tabletop.sheets(\"countyRank\").all();\r\n        //Grab historical data from past week from \"dataSnapshot\" sheet tab\r\n        let weeksData = tabletop.sheets(\"testSheet\").all();\r\n        //Debug to console\r\n        /*\r\n        console.log(todaysData);\r\n        console.log(countyData);\r\n        console.log(weeksData);\r\n        */\r\n        //Set Ontario-wide stats and county stats\r\n        //County data is left as-is and passed to slider for sake of simplicity\r\n        //Weekly data is the same\r\n        this.setState({\r\n            generalData: {\r\n                date: todaysData.date,\r\n                newInfectionsToday: todaysData.newInfectionsToday,\r\n                newInfectionsYesterday: todaysData.newInfectionsYesterday,\r\n                newInfectionsPercentChange: todaysData.newInfectionsPercentChange,\r\n                deathsToday: todaysData.deathsToday,\r\n                deathsTotal: todaysData.deathsTotal,\r\n                testsCompleted: todaysData.testsCompleted,\r\n                testsPositivity: todaysData.testsPositivity,\r\n                hospitalized: todaysData.hospitalized,\r\n                icu: todaysData.icu,\r\n                icuPercent: todaysData.icuPercent,\r\n                ventilator: todaysData.ventilator,\r\n                ventilatorPercent: todaysData.ventilatorPercent,\r\n            },\r\n            countyData: countyData,\r\n            pastWeekInfections: weeksData\r\n        })\r\n        \r\n        //\"↓ Decrease today\" \r\n        //\"↑ Increase today\"\r\n        //Set text based on case growth, used in slide 1 of slider\r\n        if (Math.sign(parseFloat(todaysData.newInfectionsPercentChange)) === 1)\r\n            this.setState({ newInfectionsIncrease: true })\r\n        else  \r\n            this.setState({ newInfectionsIncrease: false })\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    //Get user location if they allow it, pass it to display function\r\n    getUserLocation(){\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.displayLocation);\r\n        } else {\r\n           console.log(\"Geolocation not supported\");\r\n        }\r\n    }\r\n\r\n    //Display user location, currently in console\r\n    displayLocation(position){\r\n        console.log(\"Lat: \" + position.coords.latitude + \" Long: \" + position.coords.longitude);\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                    {this.getUserLocation()}\r\n                    <SimpleSlider generalData={this.state.generalData} countyData={this.state.countyData} pastWeekInfections={this.state.pastWeekInfections} newInfectionsIncrease={this.state.newInfectionsIncrease}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import Home from '../Home/Home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"]}}