{"ast":null,"code":"import _classCallCheck from\"/Users/cranchy/Sites/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cranchy/Sites/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/cranchy/Sites/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/cranchy/Sites/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cranchy/Sites/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import Tabletop from'tabletop';import SimpleSlider from'../SimpleSlider/SimpleSlider';// Import css files\nimport'slick-carousel/slick/slick.css';import'slick-carousel/slick/slick-theme.css';import'./Home.css';/* IF CHANGE TO PAPA PARSE IS NECESSARY\nCHANGE INIT FUNCTION\n    init(){\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\n          download: true,\n          header: true,\n          complete: this.populateData\n          }\n        )\n    }\nADD IMPORT\n    import Papa from 'papaparse';\n*/var Home=/*#__PURE__*/function(_React$Component){_inherits(Home,_React$Component);var _super=_createSuper(Home);function Home(props){var _this;_classCallCheck(this,Home);_this=_super.call(this,props);_this.state={loading:false,//Increase today or Decrease today based on case growth from previous day\n//Used in slide 1 of slider\nnewInfectionsChangeText:\"\",//Ontario-wide data\ngeneralData:{date:\"one sec pls\",newInfectionsToday:0,newInfectionsYesterday:0,newInfectionsPercentChange:0,deathsToday:0,deathsTotal:0,testsCompleted:0,testPositivity:0,hospitalized:0,icu:0,icuPercent:0,ventilator:0,ventilatorPercent:0},//Individual county data\ncountyData:\"\",pastWeekInfections:\"\"};_this.init=_this.init.bind(_assertThisInitialized(_this));_this.populateData=_this.populateData.bind(_assertThisInitialized(_this));_this.getUserLocation=_this.getUserLocation.bind(_assertThisInitialized(_this));_this.displayLocation=_this.displayLocation.bind(_assertThisInitialized(_this));return _this;}//runs init method on component mount\n_createClass(Home,[{key:\"componentDidMount\",value:function componentDidMount(){this.init();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}//grabs data from Google spreadsheet and sends to populateData method\n},{key:\"init\",value:function init(){var _this2=this;this.setState({loading:true});var tabletop=Tabletop.init({key:\"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\",simpleSheet:true,callback:this.populateData,orderby:\"rank\"}).then(function(data){return _this2.populateData(data,tabletop);}).catch(function(err){return console.warn(err);});}},{key:\"populateData\",value:function populateData(data,tabletop){//Grab today's stats from \"stats\" sheet tab\nvar todaysData=tabletop.sheets(\"stats\").elements[0];//Grab county stats from \"countyRank\" sheet tab\nvar countyData=tabletop.sheets(\"countyRank\").all();//Grab historical data from past week from \"\" sheet tab\nvar weeksData=tabletop.sheets(\"dataSnapshot\").all();//Debug to console\nconsole.log(todaysData);console.log(countyData);console.log(weeksData);//Set Ontario-wide stats and county stats\n//County data is left as-is and passed to slider for sake of simplicity\n//Weekly data is the same\nthis.setState({generalData:{date:todaysData.date,newInfectionsToday:todaysData.newInfectionsToday,newInfectionsYesterday:todaysData.newInfectionsYesterday,newInfectionsPercentChange:todaysData.newInfectionsPercentChange,deathsToday:todaysData.deathsToday,deathsTotal:todaysData.deathsTotal,testsCompleted:todaysData.testsCompleted,testsPositivity:todaysData.testsPositivity,hospitalized:todaysData.hospitalized,icu:todaysData.icu,icuPercent:todaysData.icuPercent,ventilator:todaysData.ventilator,ventilatorPercent:todaysData.ventilatorPercent},countyData:countyData,pastWeekInfections:weeksData});//Set text based on case growth, used in slide 1 of slider\nif(Math.sign(parseInt(todaysData.newInfectionsPercentChange))===1)this.setState({newInfectionsChangeText:\"Increase today\"});else this.setState({newInfectionsChangeText:\"Decrease today\"});this.setState({loading:false});}//Get user location if they allow it, pass it to display function\n},{key:\"getUserLocation\",value:function getUserLocation(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(this.displayLocation);}else{console.log(\"Geolocation not supported\");}}//Display user location, currently in console\n},{key:\"displayLocation\",value:function displayLocation(position){console.log(\"Lat: \"+position.coords.latitude+\" Long: \"+position.coords.longitude);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-text\",children:[this.getUserLocation(),/*#__PURE__*/_jsx(SimpleSlider,{generalData:this.state.generalData,countyData:this.state.countyData,pastWeekInfections:this.state.pastWeekInfections,newInfectionsChangeText:this.state.newInfectionsChangeText})]})});}}]);return Home;}(React.Component);export default Home;","map":{"version":3,"sources":["/Users/cranchy/Sites/on-covid/src/components/Home/Home.js"],"names":["React","Tabletop","SimpleSlider","Home","props","state","loading","newInfectionsChangeText","generalData","date","newInfectionsToday","newInfectionsYesterday","newInfectionsPercentChange","deathsToday","deathsTotal","testsCompleted","testPositivity","hospitalized","icu","icuPercent","ventilator","ventilatorPercent","countyData","pastWeekInfections","init","bind","populateData","getUserLocation","displayLocation","setState","tabletop","key","simpleSheet","callback","orderby","then","data","catch","err","console","warn","todaysData","sheets","elements","all","weeksData","log","testsPositivity","Math","sign","parseInt","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Tabletop from 'tabletop';\nimport SimpleSlider from '../SimpleSlider/SimpleSlider'\n\n// Import css files\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './Home.css';\n\n/* IF CHANGE TO PAPA PARSE IS NECESSARY\nCHANGE INIT FUNCTION\n    init(){\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\n          download: true,\n          header: true,\n          complete: this.populateData\n          }\n        )\n    }\nADD IMPORT\n    import Papa from 'papaparse';\n*/\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            loading: false,\n            //Increase today or Decrease today based on case growth from previous day\n            //Used in slide 1 of slider\n            newInfectionsChangeText: \"\",\n            //Ontario-wide data\n            generalData: {\n                date: \"one sec pls\",\n                newInfectionsToday: 0,\n                newInfectionsYesterday: 0,\n                newInfectionsPercentChange: 0,\n                deathsToday: 0,\n                deathsTotal: 0,\n                testsCompleted: 0,\n                testPositivity: 0,\n                hospitalized: 0,\n                icu: 0,\n                icuPercent: 0,\n                ventilator: 0,\n                ventilatorPercent: 0,\n            },\n            //Individual county data\n            countyData: \"\",\n            pastWeekInfections: \"\"\n        }\n        this.init = this.init.bind(this);\n        this.populateData = this.populateData.bind(this);\n        this.getUserLocation = this.getUserLocation.bind(this);\n        this.displayLocation = this.displayLocation.bind(this);\n    }\n    \n    //runs init method on component mount\n    componentDidMount(){\n        this.init();\n    }\n\n    componentWillUnmount(){\n\n    }\n\n    //grabs data from Google spreadsheet and sends to populateData method\n    init(){\n        this.setState({ loading: true })\n        var tabletop = Tabletop.init({\n            key: \"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\",\n            simpleSheet: true,\n            callback: this.populateData,\n            orderby: \"rank\"\n        })\n        .then((data) => this.populateData(data, tabletop))\n        .catch((err) => console.warn(err))\n    }\n\n    populateData(data, tabletop){\n        //Grab today's stats from \"stats\" sheet tab\n        let todaysData = tabletop.sheets(\"stats\").elements[0];\n        //Grab county stats from \"countyRank\" sheet tab\n        let countyData = tabletop.sheets(\"countyRank\").all();\n        //Grab historical data from past week from \"\" sheet tab\n        let weeksData = tabletop.sheets(\"dataSnapshot\").all();\n        //Debug to console\n        console.log(todaysData);\n        console.log(countyData);\n        console.log(weeksData);\n        //Set Ontario-wide stats and county stats\n        //County data is left as-is and passed to slider for sake of simplicity\n        //Weekly data is the same\n        this.setState({\n            generalData: {\n                date: todaysData.date,\n                newInfectionsToday: todaysData.newInfectionsToday,\n                newInfectionsYesterday: todaysData.newInfectionsYesterday,\n                newInfectionsPercentChange: todaysData.newInfectionsPercentChange,\n                deathsToday: todaysData.deathsToday,\n                deathsTotal: todaysData.deathsTotal,\n                testsCompleted: todaysData.testsCompleted,\n                testsPositivity: todaysData.testsPositivity,\n                hospitalized: todaysData.hospitalized,\n                icu: todaysData.icu,\n                icuPercent: todaysData.icuPercent,\n                ventilator: todaysData.ventilator,\n                ventilatorPercent: todaysData.ventilatorPercent,\n            },\n            countyData: countyData,\n            pastWeekInfections: weeksData\n        })\n        \n        //Set text based on case growth, used in slide 1 of slider\n        if (Math.sign(parseInt(todaysData.newInfectionsPercentChange)) === 1)\n            this.setState({ newInfectionsChangeText: \"Increase today\" })\n        else  \n            this.setState({ newInfectionsChangeText: \"Decrease today\" })\n        this.setState({ loading: false })\n    }\n\n    //Get user location if they allow it, pass it to display function\n    getUserLocation(){\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.displayLocation);\n        } else {\n           console.log(\"Geolocation not supported\");\n        }\n    }\n\n    //Display user location, currently in console\n    displayLocation(position){\n        console.log(\"Lat: \" + position.coords.latitude + \" Long: \" + position.coords.longitude);\n    }\n    \n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"main-text\">\n                    {this.getUserLocation()}\n                    <SimpleSlider generalData={this.state.generalData} countyData={this.state.countyData} pastWeekInfections={this.state.pastWeekInfections} newInfectionsChangeText={this.state.newInfectionsChangeText}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}