{"ast":null,"code":"import _classCallCheck from\"C:/Users/Doug/Desktop/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Doug/Desktop/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/Doug/Desktop/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/Doug/Desktop/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Doug/Desktop/on-covid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import Tabletop from'tabletop';import SimpleSlider from'../SimpleSlider/SimpleSlider';// Import css files\nimport'slick-carousel/slick/slick.css';import'slick-carousel/slick/slick-theme.css';import'./Home.css';var sheetURL=\"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\";var tempURL=\"1TGP492L2wqXTz9JV_6bFA7SvlbB6w7_ImbuHblOQdzg\";/* IF CHANGE TO PAPA PARSE IS NECESSARY\r\nCHANGE INIT FUNCTION\r\n    init(){\r\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\r\n          download: true,\r\n          header: true,\r\n          complete: this.populateData\r\n          }\r\n        )\r\n    }\r\nADD IMPORT\r\n    import Papa from 'papaparse';\r\n*/var Home=/*#__PURE__*/function(_React$Component){_inherits(Home,_React$Component);var _super=_createSuper(Home);function Home(props){var _this;_classCallCheck(this,Home);_this=_super.call(this,props);_this.state={loading:false,//Increase today or Decrease today based on case growth from previous day\n//Used in slide 1 of slider\nnewInfectionsIncrease:false,//Ontario-wide data\ngeneralData:{date:\"one sec pls\",newInfectionsToday:0,newInfectionsYesterday:0,newInfectionsPercentChange:0,deathsToday:0,deathsTotal:0,testsCompleted:0,testPositivity:0,hospitalized:0,icu:0,icuPercent:0,ventilator:0,ventilatorPercent:0},//Individual county data\ncountyData:\"\",//General data for the entire week\npastWeekInfections:\"\"};_this.init=_this.init.bind(_assertThisInitialized(_this));_this.populateData=_this.populateData.bind(_assertThisInitialized(_this));_this.getUserLocation=_this.getUserLocation.bind(_assertThisInitialized(_this));_this.displayLocation=_this.displayLocation.bind(_assertThisInitialized(_this));return _this;}//runs init method on component mount\n_createClass(Home,[{key:\"componentDidMount\",value:function componentDidMount(){this.init();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}//grabs data from Google spreadsheet and sends to populateData method\n},{key:\"init\",value:function init(){var _this2=this;this.setState({loading:true});var tabletop=Tabletop.init({key:tempURL,simpleSheet:true,callback:this.populateData,orderby:\"rank\",parseNumbers:true}).then(function(data){return _this2.populateData(data,tabletop);}).catch(function(err){return console.warn(err);});}},{key:\"populateData\",value:function populateData(data,tabletop){//Grab today's stats from \"dataSnapshot\" sheet tab, using last element for today's data\nvar todaysData=tabletop.sheets(\"dataSnapshot\").elements[6];//Grab county stats from \"countyRank\" sheet tab\nvar countyData=tabletop.sheets(\"countyRank\").all();//Grab historical data from past week from \"dataSnapshot\" sheet tab\nvar weeksData=tabletop.sheets(\"dataSnapshot\").all();//Debug to console\n/*\r\n        console.log(todaysData);\r\n        console.log(countyData);\r\n        console.log(weeksData);\r\n        */ //Set Ontario-wide stats and county stats\n//County data is left as-is and passed to slider for sake of simplicity\n//Weekly data is the same\nthis.setState({generalData:{date:todaysData.date,newInfectionsToday:todaysData.newInfectionsToday,newInfectionsYesterday:todaysData.newInfectionsYesterday,newInfectionsPercentChange:todaysData.newInfectionsPercentChange,deathsToday:todaysData.deathsToday,deathsTotal:todaysData.deathsTotal,testsCompleted:todaysData.testsCompleted,testsPositivity:todaysData.testsPositivity,hospitalized:todaysData.hospitalized,icu:todaysData.icu,icuPercent:todaysData.icuPercent,ventilator:todaysData.ventilator,ventilatorPercent:todaysData.ventilatorPercent},countyData:countyData,pastWeekInfections:weeksData});//\"↓ Decrease today\" \n//\"↑ Increase today\"\n//Set text based on case growth, used in slide 1 of slider\nif(Math.sign(parseFloat(todaysData.newInfectionsPercentChange))===1)this.setState({newInfectionsIncrease:true});else this.setState({newInfectionsIncrease:false});this.setState({loading:false});}//Get user location if they allow it, pass it to display function\n},{key:\"getUserLocation\",value:function getUserLocation(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(this.displayLocation);}else{console.log(\"Geolocation not supported\");}}//Display user location, currently in console\n},{key:\"displayLocation\",value:function displayLocation(position){console.log(\"Lat: \"+position.coords.latitude+\" Long: \"+position.coords.longitude);}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[this.getUserLocation(),/*#__PURE__*/_jsx(SimpleSlider,{generalData:this.state.generalData,countyData:this.state.countyData,pastWeekInfections:this.state.pastWeekInfections,newInfectionsIncrease:this.state.newInfectionsIncrease})]});}}]);return Home;}(React.Component);export default Home;","map":{"version":3,"sources":["C:/Users/Doug/Desktop/on-covid/src/components/Home/Home.js"],"names":["React","Tabletop","SimpleSlider","sheetURL","tempURL","Home","props","state","loading","newInfectionsIncrease","generalData","date","newInfectionsToday","newInfectionsYesterday","newInfectionsPercentChange","deathsToday","deathsTotal","testsCompleted","testPositivity","hospitalized","icu","icuPercent","ventilator","ventilatorPercent","countyData","pastWeekInfections","init","bind","populateData","getUserLocation","displayLocation","setState","tabletop","key","simpleSheet","callback","orderby","parseNumbers","then","data","catch","err","console","warn","todaysData","sheets","elements","all","weeksData","testsPositivity","Math","sign","parseFloat","navigator","geolocation","getCurrentPosition","log","position","coords","latitude","longitude","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Tabletop from 'tabletop';\r\nimport SimpleSlider from '../SimpleSlider/SimpleSlider'\r\n\r\n// Import css files\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport './Home.css';\r\n\r\nconst sheetURL = \"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\";\r\nconst tempURL = \"1TGP492L2wqXTz9JV_6bFA7SvlbB6w7_ImbuHblOQdzg\";\r\n\r\n/* IF CHANGE TO PAPA PARSE IS NECESSARY\r\nCHANGE INIT FUNCTION\r\n    init(){\r\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\r\n          download: true,\r\n          header: true,\r\n          complete: this.populateData\r\n          }\r\n        )\r\n    }\r\nADD IMPORT\r\n    import Papa from 'papaparse';\r\n*/\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            //Increase today or Decrease today based on case growth from previous day\r\n            //Used in slide 1 of slider\r\n            newInfectionsIncrease: false,\r\n            //Ontario-wide data\r\n            generalData: {\r\n                date: \"one sec pls\",\r\n                newInfectionsToday: 0,\r\n                newInfectionsYesterday: 0,\r\n                newInfectionsPercentChange: 0,\r\n                deathsToday: 0,\r\n                deathsTotal: 0,\r\n                testsCompleted: 0,\r\n                testPositivity: 0,\r\n                hospitalized: 0,\r\n                icu: 0,\r\n                icuPercent: 0,\r\n                ventilator: 0,\r\n                ventilatorPercent: 0,\r\n            },\r\n            //Individual county data\r\n            countyData: \"\",\r\n            //General data for the entire week\r\n            pastWeekInfections: \"\"\r\n        }\r\n        this.init = this.init.bind(this);\r\n        this.populateData = this.populateData.bind(this);\r\n        this.getUserLocation = this.getUserLocation.bind(this);\r\n        this.displayLocation = this.displayLocation.bind(this);\r\n    }\r\n    \r\n    //runs init method on component mount\r\n    componentDidMount(){\r\n        this.init();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    //grabs data from Google spreadsheet and sends to populateData method\r\n    init(){\r\n        this.setState({ loading: true })\r\n        var tabletop = Tabletop.init({\r\n            key: tempURL,\r\n            simpleSheet: true,\r\n            callback: this.populateData,\r\n            orderby: \"rank\",\r\n            parseNumbers: true\r\n        })\r\n        .then((data) => this.populateData(data, tabletop))\r\n        .catch((err) => console.warn(err))\r\n    }\r\n\r\n    populateData(data, tabletop){\r\n        //Grab today's stats from \"dataSnapshot\" sheet tab, using last element for today's data\r\n        let todaysData = tabletop.sheets(\"dataSnapshot\").elements[6];\r\n        //Grab county stats from \"countyRank\" sheet tab\r\n        let countyData = tabletop.sheets(\"countyRank\").all();\r\n        //Grab historical data from past week from \"dataSnapshot\" sheet tab\r\n        let weeksData = tabletop.sheets(\"dataSnapshot\").all();\r\n        //Debug to console\r\n        /*\r\n        console.log(todaysData);\r\n        console.log(countyData);\r\n        console.log(weeksData);\r\n        */\r\n        //Set Ontario-wide stats and county stats\r\n        //County data is left as-is and passed to slider for sake of simplicity\r\n        //Weekly data is the same\r\n        this.setState({\r\n            generalData: {\r\n                date: todaysData.date,\r\n                newInfectionsToday: todaysData.newInfectionsToday,\r\n                newInfectionsYesterday: todaysData.newInfectionsYesterday,\r\n                newInfectionsPercentChange: todaysData.newInfectionsPercentChange,\r\n                deathsToday: todaysData.deathsToday,\r\n                deathsTotal: todaysData.deathsTotal,\r\n                testsCompleted: todaysData.testsCompleted,\r\n                testsPositivity: todaysData.testsPositivity,\r\n                hospitalized: todaysData.hospitalized,\r\n                icu: todaysData.icu,\r\n                icuPercent: todaysData.icuPercent,\r\n                ventilator: todaysData.ventilator,\r\n                ventilatorPercent: todaysData.ventilatorPercent,\r\n            },\r\n            countyData: countyData,\r\n            pastWeekInfections: weeksData\r\n        })\r\n        \r\n        //\"↓ Decrease today\" \r\n        //\"↑ Increase today\"\r\n        //Set text based on case growth, used in slide 1 of slider\r\n        if (Math.sign(parseFloat(todaysData.newInfectionsPercentChange)) === 1)\r\n            this.setState({ newInfectionsIncrease: true })\r\n        else  \r\n            this.setState({ newInfectionsIncrease: false })\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    //Get user location if they allow it, pass it to display function\r\n    getUserLocation(){\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(this.displayLocation);\r\n        } else {\r\n           console.log(\"Geolocation not supported\");\r\n        }\r\n    }\r\n\r\n    //Display user location, currently in console\r\n    displayLocation(position){\r\n        console.log(\"Lat: \" + position.coords.latitude + \" Long: \" + position.coords.longitude);\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                    {this.getUserLocation()}\r\n                    <SimpleSlider generalData={this.state.generalData} countyData={this.state.countyData} pastWeekInfections={this.state.pastWeekInfections} newInfectionsIncrease={this.state.newInfectionsIncrease}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}