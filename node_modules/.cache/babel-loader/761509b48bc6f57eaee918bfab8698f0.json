{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Doug\\\\Desktop\\\\on-covid\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React from 'react';\nimport Tabletop from 'tabletop';\nimport SimpleSlider from '../SimpleSlider/SimpleSlider'; // Import css files\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport './Home.css';\n/* IF CHANGE TO PAPA PARSE IS NECESSARY\r\nCHANGE INIT FUNCTION\r\n    init(){\r\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\r\n          download: true,\r\n          header: true,\r\n          complete: this.populateData\r\n          }\r\n        )\r\n    }\r\nADD IMPORT\r\n    import Papa from 'papaparse';\r\n*/\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      //Increase today or Decrease today based on case growth from previous day\n      //Used in slide 1 of slider\n      newInfectionsChangeText: \"\",\n      //Ontario-wide data\n      generalData: {\n        date: \"one sec pls\",\n        newInfectionsToday: 0,\n        newInfectionsYesterday: 0,\n        newInfectionsPercentChange: 0,\n        deathsToday: 0,\n        deathsTotal: 0,\n        testsCompleted: 0,\n        testPositivity: 0,\n        hospitalized: 0,\n        icu: 0,\n        icuPercent: 0,\n        ventilator: 0,\n        ventilatorPercent: 0\n      },\n      //Individual county data\n      countyData: {\n        name: \"\",\n        rank: 0,\n        casesToday: 0\n      }\n    };\n    this.init = this.init.bind(this);\n    this.populateData = this.populateData.bind(this);\n  } //runs init method on component mount\n\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentWillUnmount() {} //grabs data from Google spreadsheet and sends to populateData method\n\n\n  init() {\n    setTimeout(() => {\n      this.setState({\n        loading: true\n      });\n      var tabletop = Tabletop.init({\n        key: \"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\",\n        simpleSheet: true,\n        callback: this.populateData\n      }).then(data => this.populateData(data, tabletop)).catch(err => console.warn(err));\n    }, 1000);\n  }\n\n  populateData(data, tabletop) {\n    //Grab today's stats from \"stats\" sheet tab\n    let todaysData = tabletop.sheets(\"stats\").elements[0]; //Grab county stats from \"countyRank\" sheet tab\n\n    let countyData = tabletop.sheets(\"countyRank\").all(); //Debug to console\n\n    console.log(todaysData);\n    console.log(countyData); //Set Ontario-wide stats\n\n    this.setState({\n      generalData: {\n        date: todaysData.date,\n        newInfectionsToday: todaysData.newInfectionsToday,\n        newInfectionsYesterday: todaysData.newInfectionsYesterday,\n        newInfectionsPercentChange: todaysData.newInfectionsPercentChange,\n        deathsToday: todaysData.deathsToday,\n        deathsTotal: todaysData.deathsTotal,\n        testsCompleted: todaysData.testsCompleted,\n        testsPositivity: todaysData.testsPositivity,\n        hospitalized: todaysData.hospitalized,\n        icu: todaysData.icu,\n        icuPercent: todaysData.icuPercent,\n        ventilator: todaysData.ventilator,\n        ventilatorPercent: todaysData.ventilatorPercent\n      }\n    }); //Set text based on case growth, used in slide 1 of slider\n\n    if (Math.sign(parseInt(todaysData.newInfectionsPercentChange)) === 1) this.setState({\n      newInfectionsChangeText: \"Increase today\"\n    });else this.setState({\n      newInfectionsChangeText: \"Decrease today\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-text\",\n        children: /*#__PURE__*/_jsxDEV(SimpleSlider, {\n          generalData: this.state.generalData,\n          newInfectionsChangeText: this.state.newInfectionsChangeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Doug/Desktop/on-covid/src/components/Home/Home.js"],"names":["React","Tabletop","SimpleSlider","Home","Component","constructor","props","state","loading","newInfectionsChangeText","generalData","date","newInfectionsToday","newInfectionsYesterday","newInfectionsPercentChange","deathsToday","deathsTotal","testsCompleted","testPositivity","hospitalized","icu","icuPercent","ventilator","ventilatorPercent","countyData","name","rank","casesToday","init","bind","populateData","componentDidMount","componentWillUnmount","setTimeout","setState","tabletop","key","simpleSheet","callback","then","data","catch","err","console","warn","todaysData","sheets","elements","all","log","testsPositivity","Math","sign","parseInt","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Tabletop from 'tabletop';\r\nimport SimpleSlider from '../SimpleSlider/SimpleSlider'\r\n\r\n// Import css files\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport './Home.css';\r\n\r\n/* IF CHANGE TO PAPA PARSE IS NECESSARY\r\nCHANGE INIT FUNCTION\r\n    init(){\r\n        Papa.parse('https://docs.google.com/spreadsheets/d/14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic/pub?output=csv', {\r\n          download: true,\r\n          header: true,\r\n          complete: this.populateData\r\n          }\r\n        )\r\n    }\r\nADD IMPORT\r\n    import Papa from 'papaparse';\r\n*/\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            //Increase today or Decrease today based on case growth from previous day\r\n            //Used in slide 1 of slider\r\n            newInfectionsChangeText: \"\",\r\n            //Ontario-wide data\r\n            generalData: {\r\n                date: \"one sec pls\",\r\n                newInfectionsToday: 0,\r\n                newInfectionsYesterday: 0,\r\n                newInfectionsPercentChange: 0,\r\n                deathsToday: 0,\r\n                deathsTotal: 0,\r\n                testsCompleted: 0,\r\n                testPositivity: 0,\r\n                hospitalized: 0,\r\n                icu: 0,\r\n                icuPercent: 0,\r\n                ventilator: 0,\r\n                ventilatorPercent: 0,\r\n            },\r\n            //Individual county data\r\n            countyData: {\r\n                name: \"\",\r\n                rank: 0,\r\n                casesToday: 0\r\n            }\r\n        }\r\n        this.init = this.init.bind(this);\r\n        this.populateData = this.populateData.bind(this);\r\n    }\r\n    \r\n    //runs init method on component mount\r\n    componentDidMount(){\r\n        this.init();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    //grabs data from Google spreadsheet and sends to populateData method\r\n    init(){\r\n        setTimeout(() => {\r\n        this.setState({ loading: true })\r\n        var tabletop = Tabletop.init({\r\n            key: \"14L2_NpdD9oJaHVeGSBNDnmYqdgmakbbscUIsXP-fUic\",\r\n            simpleSheet: true,\r\n            callback: this.populateData\r\n        })\r\n        .then((data) => this.populateData(data, tabletop))\r\n        .catch((err) => console.warn(err))\r\n    }, 1000);\r\n    }\r\n\r\n    populateData(data, tabletop){\r\n        //Grab today's stats from \"stats\" sheet tab\r\n        let todaysData = tabletop.sheets(\"stats\").elements[0];\r\n        //Grab county stats from \"countyRank\" sheet tab\r\n        let countyData = tabletop.sheets(\"countyRank\").all();\r\n        //Debug to console\r\n        console.log(todaysData);\r\n        console.log(countyData);\r\n        //Set Ontario-wide stats\r\n        this.setState({\r\n            generalData: {\r\n                date: todaysData.date,\r\n                newInfectionsToday: todaysData.newInfectionsToday,\r\n                newInfectionsYesterday: todaysData.newInfectionsYesterday,\r\n                newInfectionsPercentChange: todaysData.newInfectionsPercentChange,\r\n                deathsToday: todaysData.deathsToday,\r\n                deathsTotal: todaysData.deathsTotal,\r\n                testsCompleted: todaysData.testsCompleted,\r\n                testsPositivity: todaysData.testsPositivity,\r\n                hospitalized: todaysData.hospitalized,\r\n                icu: todaysData.icu,\r\n                icuPercent: todaysData.icuPercent,\r\n                ventilator: todaysData.ventilator,\r\n                ventilatorPercent: todaysData.ventilatorPercent,\r\n            }\r\n        })\r\n        //Set text based on case growth, used in slide 1 of slider\r\n        if (Math.sign(parseInt(todaysData.newInfectionsPercentChange)) === 1)\r\n            this.setState({ newInfectionsChangeText: \"Increase today\" })\r\n        else  \r\n            this.setState({ newInfectionsChangeText: \"Decrease today\" })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"main-text\">\r\n                    <SimpleSlider generalData={this.state.generalData} newInfectionsChangeText={this.state.newInfectionsChangeText}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}